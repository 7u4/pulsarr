/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ai.platon.pulsar.persist.gora.generated;

import org.apache.gora.persistency.Persistent;

public class GPageModel extends org.apache.gora.persistency.impl.PersistentBase implements org.apache.avro.specific.SpecificRecord, org.apache.gora.persistency.Persistent {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GPageModel\",\"namespace\":\"ai.platon.pulsar.persist.gora.generated\",\"fields\":[{\"name\":\"fieldGroups\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GFieldGroup\",\"fields\":[{\"name\":\"id\",\"type\":\"long\",\"default\":0},{\"name\":\"parentId\",\"type\":\"long\",\"default\":0},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"fields\",\"type\":{\"type\":\"map\",\"values\":[\"null\",\"string\"]},\"default\":{}}]}},\"default\":[]}]}");
  private static final long serialVersionUID = 1823870798188997057L;
  /** Enum containing all data bean's fields. */
  public static enum Field {
    FIELD_GROUPS(0, "fieldGroups"),
    ;
    /**
     * Field's index.
     */
    private int index;

    /**
     * Field's name.
     */
    private String name;

    /**
     * Field's constructor
     * @param index field's index.
     * @param name field's name.
     */
    Field(int index, String name) {this.index=index;this.name=name;}

    /**
     * Gets field's index.
     * @return int field's index.
     */
    public int getIndex() {return index;}

    /**
     * Gets field's name.
     * @return String field's name.
     */
    public String getName() {return name;}

    /**
     * Gets field's attributes to string.
     * @return String field's attributes to string.
     */
    public String toString() {return name;}
  };

  public static final String[] _ALL_FIELDS = {
  "fieldGroups",
  };

  /**
   * Gets the total field count.
   * @return int field count
   */
  public int getFieldsCount() {
    return GPageModel._ALL_FIELDS.length;
  }

  @Override
  public Persistent clone() {
    return null;
  }

  private java.util.List<ai.platon.pulsar.persist.gora.generated.GFieldGroup> fieldGroups;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return fieldGroups;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value) {
    switch (field$) {
    case 0: fieldGroups = (java.util.List<ai.platon.pulsar.persist.gora.generated.GFieldGroup>)((value instanceof org.apache.gora.persistency.Dirtyable) ? value : new org.apache.gora.persistency.impl.DirtyListWrapper((java.util.List)value)); break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'fieldGroups' field.
   */
  public java.util.List<ai.platon.pulsar.persist.gora.generated.GFieldGroup> getFieldGroups() {
    return fieldGroups;
  }

  /**
   * Sets the value of the 'fieldGroups' field.
   * @param value the value to set.
   */
  public void setFieldGroups(java.util.List<ai.platon.pulsar.persist.gora.generated.GFieldGroup> value) {
    this.fieldGroups = (value instanceof org.apache.gora.persistency.Dirtyable) ? value : new org.apache.gora.persistency.impl.DirtyListWrapper(value);
    setDirty(0);
  }
  
  /**
   * Checks the dirty status of the 'fieldGroups' field. A field is dirty if it represents a change that has not yet been written to the database.
   * @param value the value to set.
   */
  public boolean isFieldGroupsDirty() {
    return isDirty(0);
  }

  /** Creates a new GPageModel RecordBuilder */
  public static ai.platon.pulsar.persist.gora.generated.GPageModel.Builder newBuilder() {
    return new ai.platon.pulsar.persist.gora.generated.GPageModel.Builder();
  }
  
  /** Creates a new GPageModel RecordBuilder by copying an existing Builder */
  public static ai.platon.pulsar.persist.gora.generated.GPageModel.Builder newBuilder(ai.platon.pulsar.persist.gora.generated.GPageModel.Builder other) {
    return new ai.platon.pulsar.persist.gora.generated.GPageModel.Builder(other);
  }
  
  /** Creates a new GPageModel RecordBuilder by copying an existing GPageModel instance */
  public static ai.platon.pulsar.persist.gora.generated.GPageModel.Builder newBuilder(ai.platon.pulsar.persist.gora.generated.GPageModel other) {
    return new ai.platon.pulsar.persist.gora.generated.GPageModel.Builder(other);
  }
  
  private static java.nio.ByteBuffer deepCopyToReadOnlyBuffer(
      java.nio.ByteBuffer input) {
    java.nio.ByteBuffer copy = java.nio.ByteBuffer.allocate(input.capacity());
    int position = input.position();
    input.reset();
    int mark = input.position();
    int limit = input.limit();
    input.rewind();
    input.limit(input.capacity());
    copy.put(input);
    input.rewind();
    copy.rewind();
    input.position(mark);
    input.mark();
    copy.position(mark);
    copy.mark();
    input.position(position);
    copy.position(position);
    input.limit(limit);
    copy.limit(limit);
    return copy.asReadOnlyBuffer();
  }
  
  /**
   * RecordBuilder for GPageModel instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GPageModel>
    implements org.apache.avro.data.RecordBuilder<GPageModel> {

    private java.util.List<ai.platon.pulsar.persist.gora.generated.GFieldGroup> fieldGroups;

    /** Creates a new Builder */
    private Builder() {
      super(ai.platon.pulsar.persist.gora.generated.GPageModel.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(ai.platon.pulsar.persist.gora.generated.GPageModel.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing GPageModel instance */
    private Builder(ai.platon.pulsar.persist.gora.generated.GPageModel other) {
            super(ai.platon.pulsar.persist.gora.generated.GPageModel.SCHEMA$);
      if (isValidValue(fields()[0], other.fieldGroups)) {
        this.fieldGroups = (java.util.List<ai.platon.pulsar.persist.gora.generated.GFieldGroup>) data().deepCopy(fields()[0].schema(), other.fieldGroups);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'fieldGroups' field */
    public java.util.List<ai.platon.pulsar.persist.gora.generated.GFieldGroup> getFieldGroups() {
      return fieldGroups;
    }
    
    /** Sets the value of the 'fieldGroups' field */
    public ai.platon.pulsar.persist.gora.generated.GPageModel.Builder setFieldGroups(java.util.List<ai.platon.pulsar.persist.gora.generated.GFieldGroup> value) {
      validate(fields()[0], value);
      this.fieldGroups = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldGroups' field has been set */
    public boolean hasFieldGroups() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'fieldGroups' field */
    public ai.platon.pulsar.persist.gora.generated.GPageModel.Builder clearFieldGroups() {
      fieldGroups = null;
      fieldSetFlags()[0] = false;
      return this;
    }
    
    @Override
    public GPageModel build() {
      try {
        GPageModel record = new GPageModel();
        record.fieldGroups = fieldSetFlags()[0] ? this.fieldGroups : (java.util.List<ai.platon.pulsar.persist.gora.generated.GFieldGroup>) new org.apache.gora.persistency.impl.DirtyListWrapper((java.util.List)defaultValue(fields()[0]));
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
  
  public GPageModel.Tombstone getTombstone(){
  	return TOMBSTONE;
  }

  public GPageModel newInstance(){
    return newBuilder().build();
  }

  private static final Tombstone TOMBSTONE = new Tombstone();
  
  public static final class Tombstone extends GPageModel implements org.apache.gora.persistency.Tombstone {
  
      private Tombstone() { }
  
	  		  /**
	   * Gets the value of the 'fieldGroups' field.
		   */
	  public java.util.List<ai.platon.pulsar.persist.gora.generated.GFieldGroup> getFieldGroups() {
	    throw new java.lang.UnsupportedOperationException("Get is not supported on tombstones");
	  }
	
	  /**
	   * Sets the value of the 'fieldGroups' field.
		   * @param value the value to set.
	   */
	  public void setFieldGroups(java.util.List<ai.platon.pulsar.persist.gora.generated.GFieldGroup> value) {
	    throw new java.lang.UnsupportedOperationException("Set is not supported on tombstones");
	  }
	  
	  /**
	   * Checks the dirty status of the 'fieldGroups' field. A field is dirty if it represents a change that has not yet been written to the database.
		   * @param value the value to set.
	   */
	  public boolean isFieldGroupsDirty() {
	    throw new java.lang.UnsupportedOperationException("IsDirty is not supported on tombstones");
	  }
	
		  
  }

  private static final org.apache.avro.io.DatumWriter
            DATUM_WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);
  private static final org.apache.avro.io.DatumReader
            DATUM_READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  /**
   * Writes AVRO data bean to output stream in the form of AVRO Binary encoding format. This will transform
   * AVRO data bean from its Java object form to it s serializable form.
   *
   * @param out java.io.ObjectOutput output stream to write data bean in serializable form
   */
  @Override
  public void writeExternal(java.io.ObjectOutput out)
          throws java.io.IOException {
    out.write(super.getDirtyBytes().array());
    DATUM_WRITER$.write(this, org.apache.avro.io.EncoderFactory.get()
            .directBinaryEncoder((java.io.OutputStream) out,
                    null));
  }

  /**
   * Reads AVRO data bean from input stream in it s AVRO Binary encoding format to Java object format.
   * This will transform AVRO data bean from it s serializable form to deserialized Java object form.
   *
   * @param in java.io.ObjectOutput input stream to read data bean in serializable form
   */
  @Override
  public void readExternal(java.io.ObjectInput in)
          throws java.io.IOException {
    byte[] __g__dirty = new byte[getFieldsCount()];
    in.read(__g__dirty);
    super.setDirtyBytes(java.nio.ByteBuffer.wrap(__g__dirty));
    DATUM_READER$.read(this, org.apache.avro.io.DecoderFactory.get()
            .directBinaryDecoder((java.io.InputStream) in,
                    null));
  }
  
}

