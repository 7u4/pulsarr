<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	you under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>ai.platon.pulsar</groupId>
        <artifactId>pulsar</artifactId>
        <version>1.2.0</version>
    </parent>

    <artifactId>pulsar-rest</artifactId>
    <name>Pulsar Rest</name>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <defaultGoal>install</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${maven-war-plugin.version}</version>
                        <configuration>
                            <skip>true</skip>
                            <packagingExcludes>
                                %regex[WEB-INF/lib/log4j-(?!over-slf4j).*.jar]
                                <!--%regex[WEB-INF/lib/slf4j-log4j12.*.jar],-->
                            </packagingExcludes>
                            <!--<outputDirectory>${project.basedir}/../pulsar-server/target/</outputDirectory>-->
                        </configuration>
                        <executions>
                            <execution>
                                <id>package-a-war</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>war</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <!-- Run the application using "mvn jetty:run" -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <configuration>
                    <scanIntervalSeconds>20</scanIntervalSeconds>
                    <httpConnector>
                        <port>8182</port>
                    </httpConnector>
                    <webApp>
                        <contextPath>/api</contextPath>
                        <!-- See http://stackoverflow.com/questions/41995029/jersey-spring3-2-25-1-produces-failed-startup-of-context-error-in-jetty-9-3 -->
                        <webInfIncludeJarPattern>.*/^(asm-all-repackaged)[^/]*\.jar$</webInfIncludeJarPattern>
                    </webApp>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.glassfish</groupId>
                <artifactId>maven-embedded-glassfish-plugin</artifactId>
                <version>3.1.1</version>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <configuration>
                    <mainClass>PMaster</mainClass>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>set-system-properties</goal>
                        </goals>
                        <configuration>
                            <properties>
                                <property>
                                    <name>log4j.configuration</name>
                                    <value>log4j-dev.properties</value>
                                </property>
                            </properties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>testCompile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Pulsar dependency -->
        <dependency>
            <groupId>ai.platon.pulsar</groupId>
            <artifactId>pulsar-persist</artifactId>
        </dependency>
        <dependency>
            <groupId>ai.platon.pulsar</groupId>
            <artifactId>pulsar-skeleton</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.sun.jersey</groupId>
                    <artifactId>jersey-client</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jersey</groupId>
                    <artifactId>jersey-server</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jersey</groupId>
                    <artifactId>jersey-json</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jersey</groupId>
                    <artifactId>jersey-grizzly2</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.ws.rs</groupId>
                    <artifactId>jsr311-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>ai.platon.pulsar</groupId>
            <artifactId>pulsar-protocol</artifactId>
        </dependency>
        <dependency>
            <groupId>ai.platon.pulsar</groupId>
            <artifactId>pulsar-filter</artifactId>
        </dependency>
        <dependency>
            <groupId>ai.platon.pulsar</groupId>
            <artifactId>pulsar-parse</artifactId>
        </dependency>
        <dependency>
            <groupId>ai.platon.pulsar</groupId>
            <artifactId>pulsar-scoring</artifactId>
        </dependency>
        <dependency>
            <groupId>ai.platon.pulsar</groupId>
            <artifactId>pulsar-index</artifactId>
        </dependency>
        <dependency>
            <groupId>ai.platon.pulsar</groupId>
            <artifactId>pulsar-beans</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>

        <!-- Spring support -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.glassfish.jersey.containers/jersey-container-grizzly2-http -->
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-grizzly2-http</artifactId>
            <version>${jersey-2.version}</version>
        </dependency>
        <!-- JSON binding support via MOXy is a default and preferred way of supporting JSON binding -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-moxy</artifactId>
            <version>${jersey-2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-spring4</artifactId>
            <version>${jersey-2.version}</version>
        </dependency>

        <!-- ************************************************************************************* -->
        <!-- Start jerseyTest support -->
        <!--
            JerseyTest supports deploying applications on various containers,
            all (except the external container wrapper) need to have some "glue" code to be supported.
            Currently Jersey Test Framework provides support for
            1. Grizzly,
            2. In-Memory,
            3. JDK (com.sun.net.httpserver.HttpServer),
            4. Simple HTTP container (org.simpleframework.http)
            5. and Jetty HTTP container (org.eclipse.jetty).
         -->
        <dependency>
            <groupId>org.glassfish.jersey.test-framework</groupId>
            <artifactId>jersey-test-framework-core</artifactId>
            <version>${jersey-2.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework</groupId>
            <artifactId>jersey-test-framework-util</artifactId>
            <version>${jersey-2.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-inmemory</artifactId>
            <version>${jersey-2.version}</version>
            <scope>test</scope>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>org.glassfish.jersey.test-framework.providers</groupId>-->
        <!--<artifactId>jersey-test-framework-provider-jdk-http</artifactId>-->
        <!--<version>${jersey-2.version}</version>-->
        <!--<scope>test</scope>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.glassfish.jersey.test-framework.providers</groupId>-->
        <!--<artifactId>jersey-test-framework-provider-grizzly2</artifactId>-->
        <!--<version>${jersey-2.version}</version>-->
        <!--<scope>test</scope>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.glassfish.jersey.test-framework.providers</groupId>-->
        <!--<artifactId>jersey-test-framework-provider-jetty</artifactId>-->
        <!--<version>${jersey-2.version}</version>-->
        <!--<scope>test</scope>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.glassfish.jersey.test-framework.providers</groupId>-->
        <!--<artifactId>jersey-test-framework-provider-bundle</artifactId>-->
        <!--<version>${jersey-2.version}</version>-->
        <!--<type>pom</type>-->
        <!--<scope>test</scope>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.glassfish.jersey.test-framework.providers</groupId>-->
        <!--<artifactId>jersey-test-framework-provider-external</artifactId>-->
        <!--<version>${jersey-2.version}</version>-->
        <!--<type>pom</type>-->
        <!--<scope>test</scope>-->
        <!--</dependency>-->
        <!-- End jerseyTest support  -->
        <!-- ************************************************************************************* -->

        <!--<dependency>-->
            <!--<groupId>org.apache.hadoop</groupId>-->
            <!--<artifactId>hadoop-annotations</artifactId>-->
        <!--</dependency>-->

        <!-- jHades is a simple tool for troubleshooting Java classpath problems. -->
        <!--<dependency>-->
            <!--<groupId>org.jhades</groupId>-->
            <!--<artifactId>jhades</artifactId>-->
            <!--<version>1.0.4</version>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
            <version>${solr.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet-api.version}</version>
        </dependency>

    </dependencies>

</project>
