#!/usr/bin/env bash
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

function printUsage() {
  echo "Usage: pulsar [options...] <COMMAND> [<args>]"
  echo "COMMAND is one of:"
  echo
  echo "  master        Start pulsar master"
  echo "  start         Start db as a daemon"
  echo "  stop          Stop db safely"
  echo "  sql           Run sql client"
  echo "  db            Run db with parameters"

  echo
  echo "  Tools, samples, and tutorials:"
  echo "  h2            Run h2database"
  echo "  webdb         Run web db client"
  echo "  fetch         Fetch a web page, print the result"
  echo "  parse         Parse a web page, print the result"
  echo "  extract       Extract a web page, print the result"
  echo "  index         Index a web page, print the result"

  echo
  echo "Options: "
  echo "  -c, --config     Config dir"
  echo "  -E, --enterprise Use enterprise edition"
  echo "  -v, --verbose    Issue more message"
  echo "  -V, --version    Show version number and quit"
  echo "  -h, --help       The help text"
  exit 1
}

MODULE=
while [ $# -gt 0 ]
do
case $1 in
    -c|--config)
        shift
        PULSAR_EXTRA_CONF_DIR=$1
        shift
        ;;
    -E|--enterprise)
        ENTERPRISE_EDITION=true
        shift
        ;;
    -m|--module)
        shift
        MODULE=$1
        shift
        ;;
    -v|--verbose)
        export VERBOSE_LEVEL=1
        shift
        ;;
    -h|--help)
        SHOW_HELP=true
        shift
        ;;
    -V|--version)
        SHOW_VERSION=true
        shift
        ;;
    -*)
        echo "Unrecognized option : $1"
        echo "Try 'pulsar --help' for more information."
        exit 0
        ;;
    *)
        break
        ;;
esac
done

COMMAND=$1
shift

bin=`dirname "$0"`
bin=`cd "$bin">/dev/null; pwd`

 . "$bin"/include/pulsar-config.sh

bin=$PULSAR_HOME/bin

if [[ $SHOW_HELP ]]; then
  printUsage;
  exit 0
fi

if [[ $SHOW_VERSION ]]; then
  "$bin"/version
  exit 0
fi

# if no args specified, show usage
if [[ $COMMAND == "" ]]; then
  printUsage
  exit 0
fi

# Copy specified config files into the main config dir and overwrite the old one
# To protect from misoperation, short paths are not allowed
if [[ ${#PULSAR_EXTRA_CONF_DIR} -gt 5 ]]; then
  find $PULSAR_EXTRA_CONF_DIR -maxdepth 1 -type f | xargs -I {} cp {} $PULSAR_CONF_DIR
else
  echo "<$PULSAR_EXTRA_CONF_DIR> seems not a valid directory, please check it ..."
  exit 1
fi

# Put the config dir path at the front of CLASSPATH
if [ -d "$PULSAR_CONF_DIR" ]; then
  CLASSPATH="${CLASSPATH}:$PULSAR_CONF_DIR"
fi

CLASSPATH="${CLASSPATH}:$JAVA_HOME/lib/tools.jar"

# Choose runnable
if [ "$COMMAND" = "master" ] ; then
  MODULE=pulsar-rest
  CLASS=org.warps.pulsar.rest.embedded.PMaster
elif [ "$COMMAND" = "shell" ] ; then
  MODULE=pulsar-cli
  CLASS=org.warps.pulsar.cli.PShell
elif [ "$COMMAND" = "start" ] ; then
  export RUN_AS_DAEMON=true
  $bin/pulsar db -tcp -tcpPassword ${PULSAR_DB_PASSWORD} -web -webAllowOthers
  exit 0
elif [ "$COMMAND" = "stop" ] ; then
  $bin/pulsar db -tcpPassword ${PULSAR_DB_PASSWORD} -tcpShutdown tcp://127.0.1.1:9092
  exit 0
elif [ "$COMMAND" = "db" ] ; then
  if [ "$ENTERPRISE_EDITION" = "true" ]; then
    MODULE=pulsar-enterprise
    CLASS=org.warps.pulsar.enterprise.ql.H2DbConsole
  else
    MODULE=pulsar-ql/pulsar-ql-server
    CLASS=org.warps.pulsar.ql.h2.H2DbConsole
  fi
elif [ "$COMMAND" = "sql" ] ; then
  MODULE=pulsar-third/pulsar-h2
  CLASS=org.h2.tools.Shell
elif [ "$COMMAND" = "webdb" ] ; then
  MODULE=pulsar-cli
  CLASS=org.warps.pulsar.cli.DbClient
elif [ "$COMMAND" = "fetch" ] ; then
  MODULE=pulsar-cli
  CLASS=org.warps.pulsar.cli.Fetcher
elif [ "$COMMAND" = "parse" ] ; then
  MODULE=pulsar-cli
  CLASS=org.warps.pulsar.cli.Parser
elif [ "$COMMAND" = "index" ] ; then
  MODULE=pulsar-cli
  CLASS=org.warps.pulsar.cli.Indexer
elif [ -n "$MODULE" ]; then
  CLASS=$COMMAND
else
  printUsage
  exit 0
fi

if [ "$PULSAR_RUNTIME_MODE" == "PACKED" ]; then
 # cluster mode, just pull the job file into hadoop, and exit
 . "$bin"/include/run-cluster.sh
else
 . "$bin"/include/run-local.sh
fi
